Aqui est√£o alguns dos comandos b√°sicos do Git que voc√™ precisa conhecer:
Configura√ß√£o Inicial
sh
CopiarEditar
git config --global user.name "Seu Nome"
git config --global user.email "seuemail@example.com"
Define seu nome e e-mail para os commits.
Criar e Clonar Reposit√≥rios
sh
CopiarEditar
git init
Inicializa um reposit√≥rio Git na pasta atual.
sh
CopiarEditar
git clone <url-do-repositorio>
Clona um reposit√≥rio remoto para sua m√°quina.
Controle de Vers√£o B√°sico
sh
CopiarEditar
git status
Mostra o estado atual do reposit√≥rio.
sh
CopiarEditar
git add <arquivo>
git add .
Adiciona um arquivo (ou todos os arquivos) √† √°rea de staging.
sh
CopiarEditar
git commit -m "Mensagem do commit"
Salva as altera√ß√µes no reposit√≥rio local.
Trabalhando com Branches
sh
CopiarEditar
git branch
Lista todas as branches locais.
sh
CopiarEditar
git branch <nome-da-branch>
Cria uma nova branch.
sh
CopiarEditar
git checkout <nome-da-branch>
git switch <nome-da-branch>
Muda para a branch especificada.
sh
CopiarEditar
git checkout -b <nome-da-branch>
git switch -c <nome-da-branch>
Cria e muda para a nova branch.
Atualiza√ß√£o e Envio de Altera√ß√µes
sh
CopiarEditar
git pull origin <branch>
Baixa e mescla as altera√ß√µes do reposit√≥rio remoto.
sh
CopiarEditar
git push origin <branch>
Envia suas altera√ß√µes para o reposit√≥rio remoto.
Hist√≥rico e Compara√ß√£o
sh
CopiarEditar
git log
Exibe o hist√≥rico de commits.
sh
CopiarEditar
git diff
Mostra as diferen√ßas entre vers√µes de arquivos.
Reverter Altera√ß√µes
sh
CopiarEditar
git reset --hard <commit>
Volta para um commit anterior, descartando todas as mudan√ßas.
sh
CopiarEditar
git revert <commit>
Cria um novo commit que reverte um commit espec√≠fico.
Mesclagem e Resolu√ß√£o de Conflitos
sh
CopiarEditar
git merge <nome-da-branch>
Une outra branch √† sua branch atual.
sh
CopiarEditar
git rebase <nome-da-branch>
Move sua branch para a frente da branch alvo.
Caso tenha conflitos, edite os arquivos, adicione as mudan√ßas e finalize o rebase com:
sh
CopiarEditar
git rebase --continue
Esses s√£o os comandos essenciais do Git. Precisa de algo mais espec√≠fico? üöÄ
